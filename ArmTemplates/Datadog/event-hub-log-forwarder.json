{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "eventHubNamespace": {
      "type": "string",
      "defaultValue": "[concat('datadog-ns-', newGuid())]",
      "metadata": {
        "description": "Name of EventHub namespace, which must be globally unique."
      }
    },
    "eventHubName": {
      "type": "string",
      "defaultValue": "datadog-eventhub",
      "metadata": {
        "description": "Name of Event Hub"
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[concat('datadog-functionapp-', newGuid())]",
      "metadata": {
        "description": "The name of the function app "
      }
    },
    "functionName": {
      "type": "string",
      "defaultValue": "datadog-function",
      "metadata": {
        "description": "The name of the function."
      }
    },
    "functionAppNameInsights": {
      "type": "string",
      "defaultValue": "datadog-function",
      "metadata": {
        "description": "The name of the function."
      }
    },
    "functionCode": {
      "type": "string",
      "metadata": {
        "description": "Code for the function to run, saved into index.js"
      }
    },
    "apiKey": {
      "type": "string",
      "metadata": {
        "description": "Datadog API key"
      }
    },
    "datadogSite": {
      "type": "string",
      "defaultValue": "datadoghq.com",
      "metadata": {
        "description": "Datadog site to send logs"
      }
    },
    "endpointSuffix": {
      "type": "string",
      "defaultValue": "core.windows.net",
      "metadata": {
        "description": "Endpoint suffix for storage account"
      }
    },
    "copies": {
      "type": "int",
      "metadata": {
        "description": "number of functins and event hubs"
      }
    },
    "env": {
      "type": "string",
      "metadata": {
        "description": "Environment"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "variables": {
    "eventHubTemplateLink": "https://raw.githubusercontent.com/sweaty-betty/sb-www-devops/master/ArmTemplates/Datadog/event-hub.json",
    "functionAppTemplateLink": "https://raw.githubusercontent.com/sweaty-betty/sb-www-devops/master/ArmTemplates/Datadog/function-app.json",
    "appInsights": "[concat('sb-', parameters('env'), '-api-datadog-ingest-ai')]",
    "logAnalyticWorkspace": "[concat('sb-', parameters('env'), '-api-datadog-la')]"
  },
  "resources": [
    {
      "name": "eventHubTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('eventHubTemplateLink')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "eventHubNamespace": {
            "value": "[parameters('eventHubNamespace')]"
          },
          "eventHubName": {
            "value": "[parameters('eventHubName')]"
          },
          "copies": {
            "value": "[parameters('copies')]"
          }

        }
      }
    },
    {
      "name": "functionAppTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('functionAppTemplateLink')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "eventHubNamespace": {
            "value": "[parameters('eventHubNamespace')]"
          },
          "eventHubName": {
            "value": "[parameters('eventHubName')]"
          },
          "functionAppName": {
            "value": "[parameters('functionAppName')]"
          },
          "functionName": {
            "value": "[parameters('functionName')]"
          },
          "functionCode": {
            "value": "[parameters('functionCode')]"
          },
          "apiKey": {
            "value": "[parameters('apiKey')]"
          },
          "datadogSite": {
            "value": "[parameters('datadogSite')]"
          },
          "endpointSuffix": {
            "value": "[parameters('endpointSuffix')]"
          },
          "functionAppNameInsights": {
            "value": "[parameters('functionAppNameInsights')]"
          },
          "copies": {
            "value": "[parameters('copies')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments','eventHubTemplate')]"
      ]
    },
    {
      "type": "microsoft.insights/components",
      "copy": {
        "name": "nsg-loop",
        "count": "[parameters('copies')]"
      },
      "apiVersion": "2020-02-02",
      "name": "[concat(variables('appInsights'),'-',copyIndex(1))]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "IbizaWebAppExtensionCreate",
        "RetentionInDays": 90,
        "WorkspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces',variables('logAnalyticWorkspace'))]",
        "IngestionMode": "LogAnalytics",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "dependsOn": [
        "[resourceId('microsoft.operationalinsights/workspaces', variables('logAnalyticWorkspace'))]"
      ]
    },
    {
      "type": "microsoft.operationalinsights/workspaces",
      "apiVersion": "2021-12-01-preview",
      "name": "[variables('logAnalyticWorkspace')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "pergb2018"
        },
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        },
        "workspaceCapping": {
          "dailyQuotaGb": -1
        },
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    }
  ],
  "outputs": {
    "eventHubNamespace": {
      "type": "string",
      "value": "[parameters('eventHubNamespace')]"
    }
  }
}