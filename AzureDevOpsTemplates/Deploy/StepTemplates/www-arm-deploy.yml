# This template includes a tokenisation step.  
# In addition to the passing in the parameters listed below you will need to ensure that the variables that are tokenised are scoped to the stage or job calling this step template.

parameters:
  Location: 'West Europe'
  ArmTemplateRoot: ''
  AzureSubscription: ''
  ResourceGroup: ''
  envTag: ''
  orgTag: ''
  teamTag: ''
  CostCenterTag: ''
  instanceTag: ''
  SetTagsScriptUrl: 'https://raw.githubusercontent.com/sweaty-betty/sb-www-devops/master/PSScripts/Set-WWWResourceGroupTags.ps1'
  SetTagsScriptFilePath: '$(System.DefaultWorkingDirectory)\Set-WWWResourceGroupTags.ps1'
  ArmOutputVariableName: 'ARMOutputs'

steps:
- task: Tokenization@2
  displayName: 'Tokenization: Transform file parameters.json'
  inputs:
    SourcePath: ${{ parameters.ArmTemplateRoot }}
    TargetFileNames: parameters.json
- task: PowerShell@2
  name: DownloadSetEsfaResourceGroupTagsScript
  displayName: 'Download Set-WWWResourceGroupTags script'
  inputs:
    targetType: 'inline'
    script: Invoke-WebRequest -Uri ${{ parameters.SetTagsScriptUrl }} -OutFile ${{ parameters.SetTagsScriptFilePath }}
- task: AzurePowerShell@3
  displayName: 'Tagging Resource Group ${{ parameters.ResourceGroup }}'
  inputs:
    azureSubscription: ${{ parameters.AzureSubscription }}
    scriptType: filePath
    ScriptPath: ${{ parameters.SetTagsScriptFilePath }}
    ScriptArguments: '-ResourceGroupName ${{ parameters.ResourceGroup }}  -Location "${{  parameters.Location  }}" -env "${{ parameters.envTag }}" -org "${{ parameters.orgTag }}" -team "${{ parameters.teamTag }}"  -CostCenter "${{ parameters.CostCenterTag }}" -instance "${{ parameters.instanceTag }}" -Verbose'
    azurePowerShellVersion: LatestVersion
- task: AzureResourceGroupDeployment@2
  displayName: 'Azure Deployment: Deploy resources to ${{ parameters.ResourceGroup }}'
  inputs:
    azureSubscription: ${{ parameters.AzureSubscription }}
    resourceGroupName: '${{ parameters.ResourceGroup }}'
    location:  ${{ parameters.Location }}
    csmFile: '${{ parameters.ArmTemplateRoot }}/template.json'
    csmParametersFile: '${{ parameters.ArmTemplateRoot }}/parameters.json'
    deploymentOutputs: '$(ArmOutputVariableName)'
- task: DeleteFiles@1
  displayName: 'Delete tokenised parameters.json file'
  inputs:
    SourceFolder: ${{ parameters.ArmTemplateRoot }}
    Contents: parameters.json
  condition: always()
